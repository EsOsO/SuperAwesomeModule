name: CI
on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [develop]

jobs:
  build:
    name: Build module
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch tags for GitVersion
        run: git fetch --tags

      - name: Fetch master for GitVersion
        if: github.ref != 'refs/heads/master'
        run: git branch --create-reflog master origin/master

      - name: GitVersion
        id: gitversion  # step id used as reference for output values
        uses: roryprimrose/rungitversion@v1

      - name: Build module
        env:
          GITVERSION_MAJORMINORPATCH: ${{ steps.gitversion.outputs.MajorMinorPatch }}
          GITVERSION_SEMVER: ${{ steps.gitversion.outputs.SemVer }}
        run: ./build/build.ps1 -Task Build
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: built-module
          path: BuildOutput/

  test:
    name: Test on ${{ matrix.os }} [${{ matrix.shell }}]
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        shell: [pwsh, powershell]
        exclude:
          - os: ubuntu-latest
            shell: powershell
          - os: macOS-latest
            shell: powershell
    steps:
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: built-module
          path: BuildOutput/
      - name: Run Pester tests - Powershell Core
        if: matrix.shell == 'pwsh'
        shell: pwsh
        run: ./build/build.ps1 -Task Test
      - name: Run Pester tests - Windows Powershell
        if: matrix.shell == 'powershell'
        shell: powershell
        run: ./build/build.ps1 -Task Test
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: test-module
          path: BuildOutput/

  release:
    name: Release module
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: built-module
          path: BuildOutput/
      - run: ./build/build.ps1 -Task Release
        shell: pwsh
        env:
          NuGetApiKey: ${{ secrets.NuGetApiKey }}
